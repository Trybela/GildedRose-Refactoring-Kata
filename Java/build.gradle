plugins {
    id 'java'

    id 'jacoco'
    id 'info.solidsoft.pitest' version "${pitestPluginVersion}"
    id 'io.freefair.lombok' version "${lombokPluginVersion}"
}

group = 'com.gildedrose'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    // JUnit 5
    testImplementation platform("org.junit:junit-bom:${junitBomVersion}")
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // PIT Mutation Testing plugin for JUnit 5
    pitest "org.pitest:pitest-junit5-plugin:${pitestJunit5PluginVersion}"
}

test {
    useJUnitPlatform()
}

// Jacoco - Code Coverage Report
jacocoTestReport {
    executionData(test)
    reports {
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

// Jacoco - Coverage Threshold Enforcement
jacocoTestCoverageVerification {
    executionData(test)
    violationRules {
        rule {
            includes = ['com/gildedrose/lifecycle/**']
            limit {
                minimum = 1
            }
        }
    }
}

// PIT - Mutation Testing
pitest {
    junit5PluginVersion = pitestJunit5PluginVersion
    targetClasses = ['com.gildedrose.lifecycle.*']
    targetTests = ['com.gildedrose.*']
    mutators = ['STRONGER']
    threads = 4
    outputFormats = ['HTML']
    timestampedReports = false
    mutationThreshold = 100
}

// TexttestFixture utility
task texttest(type: JavaExec) {
    mainClass.set('com.gildedrose.TexttestFixture')
    classpath = sourceSets.test.runtimeClasspath
    args "30"
}
